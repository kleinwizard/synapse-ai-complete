# ============================================================================
# Synapse AI - Environment Configuration Template
# ============================================================================
# Copy this file to .env and configure the values for your environment
# 
# IMPORTANT: Never commit .env files to version control!
# Add .env to your .gitignore file.
# ============================================================================

# ============================================================================
# ENVIRONMENT CONFIGURATION
# ============================================================================

# Application environment (development/staging/production)
# Affects security policies, CORS settings, and error handling
ENVIRONMENT=development

# Application secret key for JWT tokens (CHANGE THIS IN PRODUCTION!)
# Generate a secure key with: openssl rand -hex 32
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# Database URL - Choose ONE of the options below:

# Option 1: SQLite (Development/Testing)
# Simple file-based database, good for development
DATABASE_URL=sqlite:///./synapse_ai.db

# Option 2: PostgreSQL (Production - RECOMMENDED)
# Replace with your actual PostgreSQL connection details
# DATABASE_URL=postgresql://username:password@localhost:5432/synapse_ai

# Option 3: PostgreSQL with SSL (Production with SSL)
# DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Database connection pool settings (PostgreSQL only)
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_RECYCLE=3600
DB_CONNECT_TIMEOUT=10
DB_COMMAND_TIMEOUT=30
DB_REQUIRE_SSL=false

# SQLite specific settings
DB_SQLITE_TIMEOUT=30

# ============================================================================
# API KEYS - LARGE LANGUAGE MODEL PROVIDERS
# ============================================================================

# OpenAI API Configuration
# Required for GPT models and cloud optimization
# Get your API key at: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Anthropic API Configuration  
# Required for Claude models
# Get your API key at: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# ============================================================================
# LOCAL LLM CONFIGURATION (OPTIONAL)
# ============================================================================

# Synapse Optimization Mode (Hybrid Implementation)
# Set to "false" for cloud API mode (default - no local setup required)
# Set to "true" for local Ollama mode (requires Ollama installation)
USE_LOCAL_OLLAMA=false

# Local Ollama Configuration (only used when USE_LOCAL_OLLAMA=true)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=phi3:mini

# Legacy Ollama Configuration (for backward compatibility)
OLLAMA_DEFAULT_MODEL=phi3:mini
ENABLE_LOCAL_MODE=false
OLLAMA_WRAPPER_URL=http://localhost:5001
OLLAMA_TIMEOUT=300
OLLAMA_TEMPERATURE=0.7
OLLAMA_MAX_TOKENS=2048

# ============================================================================
# PAYMENT PROCESSING (STRIPE)
# ============================================================================

# Stripe Configuration
# Get your keys at: https://dashboard.stripe.com/apikeys
# Use test keys for development, live keys for production

# Stripe Secret Key (server-side)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Stripe Publishable Key (client-side) 
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Stripe Webhook Secret (for webhook verification)
# Get this from: https://dashboard.stripe.com/webhooks
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# ============================================================================
# EMAIL SERVICE (SENDGRID)
# ============================================================================

# SendGrid Configuration (for transactional emails)
# Get your API key at: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# Email settings
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Synapse AI

# ============================================================================
# CORS AND SECURITY CONFIGURATION
# ============================================================================

# CORS Configuration
# For development: use http://localhost:3000,http://localhost:5173
# For production: use your actual domain(s)
CORS_ORIGIN_URL=http://localhost:3000,http://localhost:5173

# Allowed file upload extensions (comma-separated)
ALLOWED_FILE_EXTENSIONS=.txt,.json,.csv,.md,.pdf,.png,.jpg,.jpeg

# Maximum file upload size (in MB)
MAX_FILE_SIZE_MB=10

# ============================================================================
# RATE LIMITING CONFIGURATION
# ============================================================================

# Enable/disable rate limiting
RATE_LIMITING_ENABLED=true

# Default rate limits (requests per minute)
DEFAULT_RATE_LIMIT_PER_MINUTE=60
DEFAULT_RATE_LIMIT_PER_HOUR=300

# Authentication endpoint limits
AUTH_RATE_LIMIT_PER_MINUTE=10
AUTH_RATE_LIMIT_PER_HOUR=50

# API endpoint limits  
API_RATE_LIMIT_PER_MINUTE=30
API_RATE_LIMIT_PER_HOUR=150

# ============================================================================
# LOGGING AND MONITORING CONFIGURATION
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable request logging
LOG_REQUESTS=true

# Enable performance monitoring
ENABLE_METRICS=true

# Application insights/monitoring
# APPLICATIONINSIGHTS_CONNECTION_STRING=your_connection_string_here

# ============================================================================
# CACHING CONFIGURATION
# ============================================================================

# Enable in-memory caching
ENABLE_CACHING=true

# Cache TTL in seconds
CACHE_TTL=300

# Redis Configuration (optional, for distributed caching)
# REDIS_URL=redis://localhost:6379/0
# REDIS_PASSWORD=your_redis_password

# ============================================================================
# PRODUCTION OPTIMIZATIONS
# ============================================================================

# Worker configuration (for production deployment)
WORKERS=4
WORKER_CLASS=uvicorn.workers.UvicornWorker

# Request timeout (seconds)
REQUEST_TIMEOUT=300

# Keep alive timeout (seconds)
KEEP_ALIVE_TIMEOUT=65

# Maximum request size (bytes)
MAX_REQUEST_SIZE=104857600  # 100MB

# ============================================================================
# BACKUP AND MAINTENANCE
# ============================================================================

# Automatic backup settings
ENABLE_AUTO_BACKUP=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Synapse AI is temporarily unavailable for maintenance. Please try again later.

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Debug mode (ONLY for development - NEVER in production!)
DEBUG=false

# Auto-reload on file changes (development only)
RELOAD=false

# Enable API documentation endpoints (/docs, /redoc)
ENABLE_DOCS=true

# ============================================================================
# CUSTOM INTEGRATIONS
# ============================================================================

# Webhook URLs for custom integrations
# SLACK_WEBHOOK_URL=https://hooks.slack.com/your/webhook/url
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook

# Third-party service configurations
# ANALYTICS_API_KEY=your_analytics_key
# CUSTOMER_SUPPORT_API_KEY=your_support_key

# ============================================================================
# NOTES AND INSTRUCTIONS
# ============================================================================

# 1. SECURITY:
#    - Always use strong, unique passwords and API keys
#    - Never commit this file with real credentials to version control
#    - Use environment-specific keys (test keys for dev, live keys for prod)
#    - Regularly rotate API keys and secrets

# 2. PERFORMANCE:
#    - Use PostgreSQL for production (better performance than SQLite)
#    - Enable caching for better response times
#    - Configure appropriate worker counts for your server capacity

# 3. MONITORING:
#    - Enable request logging and metrics in production
#    - Set up proper monitoring and alerting
#    - Regularly check rate limiting and security logs

# 4. BACKUP:
#    - Always configure database backups for production
#    - Test backup restoration procedures regularly
#    - Keep backups in separate, secure locations

# 5. SCALING:
#    - Use Redis for distributed caching in multi-instance deployments
#    - Configure load balancers with proper health checks
#    - Monitor database connection pools and adjust as needed

# ============================================================================
# QUICK SETUP CHECKLIST
# ============================================================================

# □ Copy .env.example to .env
# □ Generate and set JWT_SECRET_KEY
# □ Configure database (PostgreSQL recommended for production)
# □ Add OpenAI API key
# □ Add Anthropic API key (optional)
# □ Configure Stripe keys for billing
# □ Set up SendGrid for emails
# □ Configure CORS origins
# □ Set ENVIRONMENT=production for production deployment
# □ Enable SSL and security headers
# □ Set up monitoring and logging
# □ Configure backups
# □ Test the complete setup

# ============================================================================